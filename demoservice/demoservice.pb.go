// Code generated by protoc-gen-go. DO NOT EDIT.
// source: demoservice.proto

package demoservice

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Input struct {
	RequestId            int32    `protobuf:"varint,1,opt,name=requestId,proto3" json:"requestId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Input) Reset()         { *m = Input{} }
func (m *Input) String() string { return proto.CompactTextString(m) }
func (*Input) ProtoMessage()    {}
func (*Input) Descriptor() ([]byte, []int) {
	return fileDescriptor_66472ab792e4fbb3, []int{0}
}

func (m *Input) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Input.Unmarshal(m, b)
}
func (m *Input) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Input.Marshal(b, m, deterministic)
}
func (m *Input) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Input.Merge(m, src)
}
func (m *Input) XXX_Size() int {
	return xxx_messageInfo_Input.Size(m)
}
func (m *Input) XXX_DiscardUnknown() {
	xxx_messageInfo_Input.DiscardUnknown(m)
}

var xxx_messageInfo_Input proto.InternalMessageInfo

func (m *Input) GetRequestId() int32 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

type Output struct {
	ResponseId           int32    `protobuf:"varint,1,opt,name=responseId,proto3" json:"responseId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Output) Reset()         { *m = Output{} }
func (m *Output) String() string { return proto.CompactTextString(m) }
func (*Output) ProtoMessage()    {}
func (*Output) Descriptor() ([]byte, []int) {
	return fileDescriptor_66472ab792e4fbb3, []int{1}
}

func (m *Output) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Output.Unmarshal(m, b)
}
func (m *Output) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Output.Marshal(b, m, deterministic)
}
func (m *Output) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Output.Merge(m, src)
}
func (m *Output) XXX_Size() int {
	return xxx_messageInfo_Output.Size(m)
}
func (m *Output) XXX_DiscardUnknown() {
	xxx_messageInfo_Output.DiscardUnknown(m)
}

var xxx_messageInfo_Output proto.InternalMessageInfo

func (m *Output) GetResponseId() int32 {
	if m != nil {
		return m.ResponseId
	}
	return 0
}

func init() {
	proto.RegisterType((*Input)(nil), "demoservice.Input")
	proto.RegisterType((*Output)(nil), "demoservice.Output")
}

func init() { proto.RegisterFile("demoservice.proto", fileDescriptor_66472ab792e4fbb3) }

var fileDescriptor_66472ab792e4fbb3 = []byte{
	// 154 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4c, 0x49, 0xcd, 0xcd,
	0x2f, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x46,
	0x12, 0x52, 0x52, 0xe5, 0x62, 0xf5, 0xcc, 0x2b, 0x28, 0x2d, 0x11, 0x92, 0xe1, 0xe2, 0x2c, 0x4a,
	0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0xf1, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0d, 0x42, 0x08,
	0x28, 0x69, 0x70, 0xb1, 0xf9, 0x97, 0x96, 0x80, 0xd4, 0xc9, 0x71, 0x71, 0x15, 0xa5, 0x16, 0x17,
	0xe4, 0xe7, 0x15, 0xa7, 0xc2, 0x15, 0x22, 0x89, 0x18, 0x55, 0x71, 0x71, 0xbb, 0xa4, 0xe6, 0xe6,
	0x07, 0x43, 0xcc, 0x17, 0x32, 0xe1, 0x62, 0x77, 0x4f, 0x2d, 0x71, 0x49, 0x2c, 0x49, 0x14, 0x12,
	0xd2, 0x43, 0x76, 0x0b, 0xd8, 0x56, 0x29, 0x61, 0x14, 0x31, 0x88, 0x15, 0x4a, 0x0c, 0x42, 0xa6,
	0x5c, 0x1c, 0x50, 0x5d, 0x86, 0x24, 0x68, 0x4b, 0x62, 0x03, 0x7b, 0xd0, 0x18, 0x10, 0x00, 0x00,
	0xff, 0xff, 0x68, 0x4c, 0x1c, 0xbe, 0xf5, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DemoServiceClient is the client API for DemoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DemoServiceClient interface {
	// Obtains the feature at a given position.
	GetData(ctx context.Context, in *Input, opts ...grpc.CallOption) (*Output, error)
	// Obtains the feature at a given position.
	GetData1(ctx context.Context, in *Input, opts ...grpc.CallOption) (*Output, error)
}

type demoServiceClient struct {
	cc *grpc.ClientConn
}

func NewDemoServiceClient(cc *grpc.ClientConn) DemoServiceClient {
	return &demoServiceClient{cc}
}

func (c *demoServiceClient) GetData(ctx context.Context, in *Input, opts ...grpc.CallOption) (*Output, error) {
	out := new(Output)
	err := c.cc.Invoke(ctx, "/demoservice.DemoService/GetData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *demoServiceClient) GetData1(ctx context.Context, in *Input, opts ...grpc.CallOption) (*Output, error) {
	out := new(Output)
	err := c.cc.Invoke(ctx, "/demoservice.DemoService/GetData1", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DemoServiceServer is the server API for DemoService service.
type DemoServiceServer interface {
	// Obtains the feature at a given position.
	GetData(context.Context, *Input) (*Output, error)
	// Obtains the feature at a given position.
	GetData1(context.Context, *Input) (*Output, error)
}

// UnimplementedDemoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedDemoServiceServer struct {
}

func (*UnimplementedDemoServiceServer) GetData(ctx context.Context, req *Input) (*Output, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetData not implemented")
}
func (*UnimplementedDemoServiceServer) GetData1(ctx context.Context, req *Input) (*Output, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetData1 not implemented")
}

func RegisterDemoServiceServer(s *grpc.Server, srv DemoServiceServer) {
	s.RegisterService(&_DemoService_serviceDesc, srv)
}

func _DemoService_GetData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Input)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoServiceServer).GetData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/demoservice.DemoService/GetData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoServiceServer).GetData(ctx, req.(*Input))
	}
	return interceptor(ctx, in, info, handler)
}

func _DemoService_GetData1_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Input)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoServiceServer).GetData1(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/demoservice.DemoService/GetData1",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoServiceServer).GetData1(ctx, req.(*Input))
	}
	return interceptor(ctx, in, info, handler)
}

var _DemoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "demoservice.DemoService",
	HandlerType: (*DemoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetData",
			Handler:    _DemoService_GetData_Handler,
		},
		{
			MethodName: "GetData1",
			Handler:    _DemoService_GetData1_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "demoservice.proto",
}
